import{t as n,j as h,i as s,c as e,w as o,ac as t,q as N,v as p,B as b,ad as v,_ as D}from"./vendor.955a6bf0.js";import{u as P}from"./utils.41a699f7.js";import{G as A}from"./GithubSource.afd746ad.js";const W=n(`<div class="mt-5"><h2>API</h2><h3>Toast</h3><code>import { Toast } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">animation </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>Apply a CSS fade transition to the toast</p></div></td></tr><tr><td class="font-monospace">autohide </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Auto hide the toast</p></div></td></tr><tr><td class="font-monospace">bg </td><td class="font-monospace"><div><span><code>'primary'</code><span> | </span><code>'secondary'</code><span> | </span><code>'success'</code><span> | </span><code>'danger'</code><span> | </span><code>'warning'</code><span> | </span><code>'info'</code><span> | </span><code>'dark'</code><span> | </span><code>'light'</code></span></div></td><td></td><td><div><p>Sets Toast background</p></div></td></tr><tr><td class="font-monospace">delay </td><td class="font-monospace"><div>number</div></td><td><code>5000</code></td><td><div><p>Delay hiding the toast (ms)</p></div></td></tr><tr><td class="font-monospace">onClose </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A Callback fired when the close button is clicked.</p></div></td></tr><tr><td class="font-monospace">show </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>When <code>true</code> The modal will show itself.</p></div></td></tr><tr><td class="font-monospace">transition </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;ToastFade&gt;</code></td><td><div><p>A <code>react-transition-group</code> Transition component used to animate the Toast on dismissal.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'toast'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ToastHeader</h3><code>import { ToastHeader } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">closeButton </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>Specify whether the Component should contain a close button</p></div></td></tr><tr><td class="font-monospace">closeLabel </td><td class="font-monospace"><div>string</div></td><td><code>'Close'</code></td><td><div><p>Provides an accessible label for the close button. It is used for Assistive Technology when the label text is not readable.</p></div></td></tr><tr><td class="font-monospace">closeVariant </td><td class="font-monospace"><div><span><code>'white'</code></span></div></td><td></td><td><div><p>Sets the variant for close button.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ToastBody</h3><code>import { ToastBody } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'toast-body'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ToastContainer</h3><code>import { ToastContainer } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">position </td><td class="font-monospace"><div><span><code>'top-start'</code><span> | </span><code>'top-center'</code><span> | </span><code>'top-end'</code><span> | </span><code>'middle-start'</code><span> | </span><code>'middle-center'</code><span> | </span><code>'middle-end'</code><span> | </span><code>'bottom-start'</code><span> | </span><code>'bottom-center'</code><span> | </span><code>'bottom-end'</code></span></div></td><td></td><td><div><p>Where the toasts will be placed within the container.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'toast-container'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div></div>`),j=()=>W.cloneNode(!0),r=n('<img src="holder.js/20x20?text=%20" class="rounded me-2" alt="">'),a=n('<strong class="me-auto">Bootstrap</strong>'),i=n("<small>11 mins ago</small>"),z=n("<strong>with</strong>"),G=n("<strong>without</strong>"),T=n('<small class="text-muted">just now</small>'),C=n('<small class="text-muted">2 seconds ago</small>'),I=n('<div class="mb-3"><label for="selectToastPlacement">Toast position</label></div>'),S=n('<div aria-live="polite" aria-atomic="true" class="bg-dark position-relative"></div>'),J=n('<div class="row gy-4"><div><h2>Toasts</h2><p class="lead">Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.</p></div><div></div></div>'),L=n("<option></option>"),E=()=>{const[x,f]=h(!0),[H,y]=h(!0),[B,w]=h(!1),[k,_]=h("top-start");return P(),(()=>{const u=J.cloneNode(!0),m=u.firstChild,$=m.firstChild,l=m.nextSibling;return s(m,e(A,{name:"ToastDocs"}),$),s(l,e(o,{get children(){return[e(o.Header,{children:"Examples"}),e(o.Body,{get children(){return e(t,{get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),i.cloneNode(!0)]}}),e(t.Body,{children:"Hello, world! This is a toast message."})]}})}})]}}),null),s(l,e(o,{get children(){return[e(o.Header,{children:"Dismissible"}),e(o.Body,{get children(){return e(N,{get children(){return[e(p,{md:6,className:"mb-2",get children(){return[e(b,{onClick:()=>f(d=>!d),className:"mb-2",get children(){return["Toggle Toast ",z.cloneNode(!0)," Animation"]}}),e(t,{get show(){return x()},onClose:()=>f(!1),get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),i.cloneNode(!0)]}}),e(t.Body,{children:"Woohoo, you're reading this text in a Toast!"})]}})]}}),e(p,{md:6,className:"mb-2",get children(){return[e(b,{onClick:()=>y(d=>!d),className:"mb-2",get children(){return["Toggle Toast ",G.cloneNode(!0)," Animation"]}}),e(t,{get show(){return H()},onClose:()=>y(!1),animation:!1,get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),i.cloneNode(!0)]}}),e(t.Body,{children:"Woohoo, you're reading this text in a Toast!"})]}})]}})]}})}})]}}),null),s(l,e(o,{get children(){return[e(o.Header,{children:"Stacking"}),e(o.Body,{get children(){return e(v,{get children(){return[e(t,{get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),T.cloneNode(!0)]}}),e(t.Body,{children:"See? Just like this."})]}}),e(t,{get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),C.cloneNode(!0)]}}),e(t.Body,{children:"Heads up, toasts will stack automatically"})]}})]}})}})]}}),null),s(l,e(o,{get children(){return[e(o.Header,{children:"Placement"}),e(o.Body,{get children(){return[(()=>{const d=I.cloneNode(!0);return d.firstChild,s(d,e(D.Select,{id:"selectToastPlacement",className:"mt-2",onChange:c=>_(c.currentTarget.value),get children(){return["top-start","top-center","top-end","middle-start","middle-center","middle-end","bottom-start","bottom-center","bottom-end"].map(c=>(()=>{const g=L.cloneNode(!0);return g.value=c,s(g,c),g})())}}),null),d})(),(()=>{const d=S.cloneNode(!0);return d.style.setProperty("min-height","240px"),s(d,e(v,{className:"p-3",get position(){return k()},get children(){return e(t,{get children(){return[e(t.Header,{closeButton:!1,get children(){return[r.cloneNode(!0),a.cloneNode(!0),i.cloneNode(!0)]}}),e(t.Body,{children:"Hello, world! This is a toast message."})]}})}})),d})()]}})]}}),null),s(l,e(o,{get children(){return[e(o.Header,{children:"Wrapping element to stack"}),e(o.Body,{get children(){const d=S.cloneNode(!0);return d.style.setProperty("min-height","240px"),s(d,e(v,{position:"top-end",className:"p-3",get children(){return[e(t,{get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),T.cloneNode(!0)]}}),e(t.Body,{children:"See? Just like this."})]}}),e(t,{get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),C.cloneNode(!0)]}}),e(t.Body,{children:"Heads up, toasts will stack automatically"})]}})]}})),d}})]}}),null),s(l,e(o,{get children(){return[e(o.Header,{children:"Autohide (3000 ms)"}),e(o.Body,{get children(){return e(N,{get children(){return[e(p,{xs:6,get children(){return e(t,{onClose:()=>w(!1),get show(){return B()},delay:3e3,autohide:!0,get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),i.cloneNode(!0)]}}),e(t.Body,{children:"Woohoo, you're reading this text in a Toast!"})]}})}}),e(p,{xs:6,get children(){return e(b,{onClick:()=>w(!0),children:"Show Toast"})}})]}})}})]}}),null),s(l,e(o,{get children(){return[e(o.Header,{children:"Contextual variations"}),e(o.Body,{get children(){return["Primary","Secondary","Success","Danger","Warning","Info","Light","Dark"].map((d,c)=>e(t,{className:"d-inline-block m-1",get bg(){return d.toLowerCase()},get children(){return[e(t.Header,{get children(){return[r.cloneNode(!0),a.cloneNode(!0),i.cloneNode(!0)]}}),e(t.Body,{className:d==="Dark"?"text-white":"",children:"Hello, world! This is a toast message."})]}}))}})]}}),null),s(u,e(j,{}),null),u})()};export{E as ToastDocs,E as default};
