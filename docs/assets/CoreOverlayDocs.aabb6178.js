import{t as v,d as e,v as C,a as O,i as u,h as k}from"./vendor.e0c45427.js";import{O as j}from"./Overlay.1dfa9c7c.js";import"./store.b4ef7dcb.js";import"./index.58251ec3.js";const S=v('<div class="row gy-4"><div><h3>Overlays (core)</h3><p class="lead">A powerful and flexible overlay component for showing things over, and next to, other things.</p><p>This example is styled to look like a tooltip (with an adaptive arrow). It also demonstates using an optional <code>&lt;Transition /></code>.</p><p>Click the button to cycle through placement options.</p></div><div class="d-flex justify-content-center"><button class="btn btn-primary">I am an overlay target</button></div><div></div></div>'),T=v('<div class="tooltip bs-tooltip-auto show"><div class="tooltip-arrow"></div><div class="tooltip-inner">I am a overlay!</div></div>'),h=["top","right","bottom","left"],P=()=>{const[m,l]=e(),[g,i]=e(null),[a,r]=e(!1),[o,c]=e();function y(){a()?o()==="left"?r(!1):c(h[h.indexOf(o())+1]):(c("top"),r(!0))}return(()=>{const t=S.cloneNode(!0),$=t.firstChild,d=$.nextSibling,s=d.firstChild,b=d.nextSibling,p=i;typeof p=="function"?p(t):i=t,s.$$click=y;const f=l;return typeof f=="function"?f(s):l=s,C(b,O(j,{get show(){return a()},offset:[0,5],container:g,target:m,get placement(){return o()},flip:!0,children:(w,_)=>(()=>{const n=T.cloneNode(!0),x=n.firstChild;return u(n,()=>w(),!1,!0),u(x,()=>_(),!1,!1),n})()})),t})()};k(["click"]);export{P as CoreOverlayDocs,P as default};
