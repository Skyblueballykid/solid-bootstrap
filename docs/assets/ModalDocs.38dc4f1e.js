import{t as c,j as b,i as s,c as t,w as d,_ as e,B as o,C as x,q as w,v as p,p as k}from"./vendor.b6f8d757.js";import{G as S}from"./GithubSource.f9c23733.js";const B=c(`<div class="mt-5"><h2>API</h2><h3>Modal</h3><code>import { Modal } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">animation </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>Open and close the Modal with a slide and fade animation.</p></div></td></tr><tr><td class="font-monospace">aria-labelledby </td><td class="font-monospace"><div>any</div></td><td></td><td><div></div></td></tr><tr><td class="font-monospace">autoFocus </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>When <code>true</code> The modal will automatically shift focus to itself when it opens, and replace it to the last focused element when it closes. Generally this should never be set to false as it makes the Modal less accessible to assistive technologies, like screen-readers.</p></div></td></tr><tr><td class="font-monospace">backdrop </td><td class="font-monospace"><div><span><code>'static'</code><span> | </span><code>true</code><span> | </span><code>false</code></span></div></td><td><code>true</code></td><td><div><p>Include a backdrop component. Specify 'static' for a backdrop that doesn't trigger an "onHide" when clicked.</p></div></td></tr><tr><td class="font-monospace">backdropClassName </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Add an optional extra class name to .modal-backdrop It could end up looking like class="modal-backdrop foo-modal-backdrop in".</p></div></td></tr><tr><td class="font-monospace">centered </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>vertically center the Dialog in the window</p></div></td></tr><tr><td class="font-monospace">container </td><td class="font-monospace"><div>any</div></td><td></td><td><div></div></td></tr><tr><td class="font-monospace">contentClassName </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Add an optional extra class name to .modal-content</p></div></td></tr><tr><td class="font-monospace">dialogAs </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;ModalDialog&gt;</code></td><td><div><p>A Component type that provides the modal content Markup. This is a useful prop when you want to use your own styles and markup to create a custom modal component.</p></div></td></tr><tr><td class="font-monospace">dialogClassName </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>A css class to apply to the Modal dialog DOM node.</p></div></td></tr><tr><td class="font-monospace">enforceFocus </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>When <code>true</code> The modal will prevent focus from leaving the Modal while open. Consider leaving the default value here, as it is necessary to make the Modal work well with assistive technologies, such as screen readers.</p></div></td></tr><tr><td class="font-monospace">fullscreen </td><td class="font-monospace"><div><span><code>true</code><span> | </span><code>'sm-down'</code><span> | </span><code>'md-down'</code><span> | </span><code>'lg-down'</code><span> | </span><code>'xl-down'</code><span> | </span><code>'xxl-down'</code></span></div></td><td></td><td><div><p>Renders a fullscreen modal. Specifying a breakpoint will render the modal as fullscreen <strong>below</strong> the breakpoint size.</p></div></td></tr><tr><td class="font-monospace">keyboard </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>Close the modal when escape key is pressed</p></div></td></tr><tr><td class="font-monospace">manager </td><td class="font-monospace"><div>object</div></td><td></td><td><div><p>A ModalManager instance used to track and manage the state of open Modals. Useful when customizing how modals interact within a container</p></div></td></tr><tr><td class="font-monospace">onEnter </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>Callback fired before the Modal transitions in</p></div></td></tr><tr><td class="font-monospace">onEntered </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>Callback fired after the Modal finishes transitioning in</p></div></td></tr><tr><td class="font-monospace">onEntering </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>Callback fired as the Modal begins to transition in</p></div></td></tr><tr><td class="font-monospace">onEscapeKeyDown </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback fired when the escape key, if specified in <code>keyboard</code>, is pressed.</p></div></td></tr><tr><td class="font-monospace">onExit </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>Callback fired right before the Modal transitions out</p></div></td></tr><tr><td class="font-monospace">onExited </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>Callback fired after the Modal finishes transitioning out</p></div></td></tr><tr><td class="font-monospace">onExiting </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>Callback fired as the Modal begins to transition out</p></div></td></tr><tr><td class="font-monospace">onHide </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback fired when the header closeButton or non-static backdrop is clicked. Required if either are specified.</p></div></td></tr><tr><td class="font-monospace">onShow </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback fired when the Modal is opening.</p></div></td></tr><tr><td class="font-monospace">restoreFocus </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>When <code>true</code> The modal will restore focus to previously focused element once modal is hidden</p></div></td></tr><tr><td class="font-monospace">restoreFocusOptions </td><td class="font-monospace"><div>shape</div></td><td></td><td><div><p>Options passed to focus function when <code>restoreFocus</code> is set to <code>true</code></p></div></td></tr><tr><td class="font-monospace">scrollable </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Allows scrolling the <code>&lt;Modal.Body&gt;</code> instead of the entire Modal when overflowing.</p></div></td></tr><tr><td class="font-monospace">show </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>When <code>true</code> The modal will show itself.</p></div></td></tr><tr><td class="font-monospace">size </td><td class="font-monospace"><div><span><code>'sm'</code><span> | </span><code>'lg'</code><span> | </span><code>'xl'</code></span></div></td><td></td><td><div><p>Render a large, extra large or small modal. When not provided, the modal is rendered with medium (default) size.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'modal'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ModalDialog</h3><code>import { ModalDialog } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">centered </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Specify whether the Component should be vertically centered</p></div></td></tr><tr><td class="font-monospace">contentClassName </td><td class="font-monospace"><div>string</div></td><td></td><td><div></div></td></tr><tr><td class="font-monospace">fullscreen </td><td class="font-monospace"><div><span><code>true</code><span> | </span><code>'sm-down'</code><span> | </span><code>'md-down'</code><span> | </span><code>'lg-down'</code><span> | </span><code>'xl-down'</code><span> | </span><code>'xxl-down'</code></span></div></td><td></td><td><div><p>Renders a fullscreen modal. Specifying a breakpoint will render the modal as fullscreen <strong>below</strong> the breakpoint size.</p></div></td></tr><tr><td class="font-monospace">scrollable </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Allows scrolling the <code>&lt;Modal.Body&gt;</code> instead of the entire Modal when overflowing.</p></div></td></tr><tr><td class="font-monospace">size </td><td class="font-monospace"><div><span><code>'sm'</code><span> | </span><code>'lg','xl'</code></span></div></td><td></td><td><div><p>Render a large, extra large or small modal.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'modal'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ModalHeader</h3><code>import { ModalHeader } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">closeButton </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Specify whether the Component should contain a close button</p></div></td></tr><tr><td class="font-monospace">closeLabel </td><td class="font-monospace"><div>string</div></td><td><code>'Close'</code></td><td><div><p>Provides an accessible label for the close button. It is used for Assistive Technology when the label text is not readable.</p></div></td></tr><tr><td class="font-monospace">closeVariant </td><td class="font-monospace"><div><span><code>'white'</code></span></div></td><td></td><td><div><p>Sets the variant for close button.</p></div></td></tr><tr><td class="font-monospace">onHide </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A Callback fired when the close button is clicked. If used directly inside a Modal component, the onHide will automatically be propagated up to the parent Modal <code>onHide</code>.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'modal-header'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;DivStyledAsH4&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'modal-title'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div></div><h3>ModalTitle</h3><code>import { ModalTitle } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;DivStyledAsH4&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'modal-title'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ModalBody</h3><code>import { ModalBody } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'modal-body'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ModalFooter</h3><code>import { ModalFooter } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'modal-footer'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div></div>`),H=()=>B.cloneNode(!0),T="_modal90w_zos38_1";var D={modal90w:T};const q=c("<p>Modal body text goes here.</p>"),z=c("<h4>Centered Modal</h4>"),N=c("<p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>"),A=c("<p>Ipsum molestiae natus adipisci modi eligendi? Debitis amet quae unde commodi aspernatur enim, consectetur. Cumque deleniti temporibus ipsam atque a dolores quisquam quisquam adipisci possimus laboriosam. Quibusdam facilis doloribus debitis! Sit quasi quod accusamus eos quod. Ab quos consequuntur eaque quo rem! Mollitia reiciendis porro quo magni incidunt dolore amet atque facilis ipsum deleniti rem!</p>"),F=c(`<div class="row gy-4"><div><h2>Modals</h2><div class="head">Add dialogs to your site for lightboxes, user notifications, or completely custom content.</div></div><div><h4>Overview</h4><ul><li>Modals are positioned over everything else in the document and remove scroll from the <code>&lt;body></code> so that modal content scrolls instead.</li><li>Modals are unmounted when closed.</li><li>Bootstrap only supports one modal window at a time. Nested modals aren't supported, but if you really need them, the underlying <code>solid-bootstrap/core</code> library can support them if you're willing.</li><li>Modal's "trap" focus in them, ensuring the keyboard navigation cycles through the modal, and not the rest of the page.</li><li>Unlike vanilla Bootstrap, <code>autoFocus</code> works in Modals because Solid handles the implementation.</li></ul></div><div></div></div>`);b(!1);const P=()=>{const m=new Map,u=a=>(m.has(a)||m.set(a,b(!1)),m.get(a)),r=a=>u(a)[0](),l=a=>()=>u(a)[1](!0),n=a=>()=>u(a)[1](!1),[v,y]=b(null);return(()=>{const a=F.cloneNode(!0),g=a.firstChild,C=g.firstChild,M=g.nextSibling,i=M.nextSibling;return s(g,t(S,{name:"ModalDocs"}),C),s(i,t(d,{get children(){return[t(d.Header,{children:"Static Markup"}),t(d.Body,{get children(){return t(e.Dialog,{get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{children:"Modal title"})}}),t(e.Body,{get children(){return q.cloneNode(!0)}}),t(e.Footer,{get children(){return[t(o,{variant:"secondary",children:"Close"}),t(o,{variant:"primary",children:"Save changes"})]}})]}})}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Live demo"}),t(d.Body,{get children(){return[t(o,{variant:"primary",get onClick(){return l("live")},children:"Launch demo modal"}),t(e,{get show(){return r("live")},get onHide(){return n("live")},get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{children:"Modal heading"})}}),t(e.Body,{children:"Woohoo, you're reading this text in a modal!"}),t(e.Footer,{get children(){return[t(o,{variant:"secondary",get onClick(){return n("live")},children:"Close"}),t(o,{variant:"primary",get onClick(){return n("live")},children:"Save Changes"})]}})]}})," "]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Static backdrop"}),t(d.Body,{get children(){return[t(o,{variant:"primary",get onClick(){return l("static")},children:"Launch static backdrop modal"}),t(e,{get show(){return r("static")},get onHide(){return n("static")},backdrop:"static",keyboard:!1,get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{children:"Modal title"})}}),t(e.Body,{children:"I will not close if you click outside me. Don't even try to press escape key."}),t(e.Footer,{get children(){return[t(o,{variant:"secondary",get onClick(){return n("static")},children:"Close"}),t(o,{variant:"primary",children:"Understood"})]}})]}})," "]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Without Animation"}),t(d.Body,{get children(){return[t(o,{variant:"primary",get onClick(){return l("noanim")},children:"Launch without animation"}),t(e,{get show(){return r("noanim")},get onHide(){return n("noanim")},animation:!1,get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{children:"Modal heading"})}}),t(e.Body,{children:"Woohoo, you're reading this text in a modal!"}),t(e.Footer,{get children(){return[t(o,{variant:"secondary",get onClick(){return n("noanim")},children:"Close"}),t(o,{variant:"primary",get onClick(){return n("noanim")},children:"Save Changes"})]}})]}})]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Vertically centered"}),t(d.Body,{get children(){return[t(o,{variant:"primary",get onClick(){return l("vertc")},children:"Launch vertically centered modal"}),t(e,{get show(){return r("vertc")},get onHide(){return n("vertc")},size:"lg","aria-labelledby":"contained-modal-title-vcenter",centered:!0,get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{id:"contained-modal-title-vcenter",children:"Modal heading"})}}),t(e.Body,{get children(){return[z.cloneNode(!0),N.cloneNode(!0)]}}),t(e.Footer,{get children(){return t(o,{get onClick(){return n("vertc")},children:"Close"})}})]}})]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Using the grid"}),t(d.Body,{get children(){return[t(o,{variant:"primary",get onClick(){return l("grid")},children:"Launch modal with grid"}),t(e,{get show(){return r("grid")},get onHide(){return n("grid")},"aria-labelledby":"contained-modal-title-vcenter",get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{id:"contained-modal-title-vcenter",children:"Modal heading"})}}),t(e.Body,{className:"show-grid",get children(){return t(x,{get children(){return[t(w,{get children(){return[t(p,{xs:12,md:8,style:h,children:".col-xs-12 .col-md-8"}),t(p,{xs:6,md:4,style:h,children:".col-xs-6 .col-md-4"})]}}),t(w,{get children(){return[t(p,{xs:6,md:4,style:h,children:".col-xs-6 .col-md-4"}),t(p,{xs:6,md:4,style:h,children:".col-xs-6 .col-md-4"}),t(p,{xs:6,md:4,style:h,children:".col-xs-6 .col-md-4"})]}})]}})}}),t(e.Footer,{get children(){return t(o,{get onClick(){return n("grid")},children:"Close"})}})]}})]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Option sizes"}),t(d.Body,{get children(){return[t(o,{get onClick(){return l("small")},children:"Small modal"})," ",t(o,{get onClick(){return l("large")},children:"Large modal"}),t(e,{size:"sm",get show(){return r("small")},get onHide(){return n("small")},"aria-labelledby":"example-modal-sizes-title-sm",get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{id:"example-modal-sizes-title-sm",children:"Small Modal"})}}),t(e.Body,{children:"..."})]}}),t(e,{size:"lg",get show(){return r("large")},get onHide(){return n("large")},"aria-labelledby":"example-modal-sizes-title-lg",get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{id:"example-modal-sizes-title-lg",children:"Large Modal"})}}),t(e.Body,{children:"..."})]}})]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Fullscreen Modal"}),t(d.Body,{get children(){return[k(()=>["true","sm-down","md-down","lg-down","xl-down","xxl-down"].map((f,_)=>t(o,{className:"me-2",onClick:()=>y(f),get children(){return["Full screen",k(()=>f!=="true"&&`below ${f.split("-")[0]}`)]}}))),t(e,{get show(){return!!v()},get fullscreen(){return v()==="true"||v()},onHide:()=>y(null),get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{children:"Modal"})}}),t(e.Body,{children:"Modal body content"})]}})]}})]}}),null),s(i,t(d,{get children(){return[t(d.Header,{children:"Sizing modals using custom CSS"}),t(d.Body,{get children(){return[t(o,{variant:"primary",get onClick(){return l("custom")},children:"Custom Width Modal"}),t(e,{get show(){return r("custom")},get onHide(){return n("custom")},get dialogClassName(){return D.modal90w},"aria-labelledby":"example-custom-modal-styling-title",get children(){return[t(e.Header,{closeButton:!0,get children(){return t(e.Title,{id:"example-custom-modal-styling-title",children:"Custom Modal Styling"})}}),t(e.Body,{get children(){return A.cloneNode(!0)}})]}})]}})]}}),null),s(a,t(H,{}),null),a})()},h={"background-color":"#bbeffd",border:"1px solid #61dafb"};export{P as ModalDocs,P as default};
