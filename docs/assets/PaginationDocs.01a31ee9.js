import{t as r,i as d,c as t,w as o,a6 as e,F as v}from"./vendor.e63070bb.js";import{G as b}from"./GithubSource.771c25c4.js";const g=r(`<div class="mt-5"><h2>API</h2><h3>Pagination</h3><code>import { Pagination } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">size </td><td class="font-monospace"><div><span><code>'sm'</code><span> | </span><code>'lg'</code></span></div></td><td></td><td><div><p>Set's the size of all PageItems.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'pagination'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>PageItem</h3><code>import { PageItem } from 'solid-bootstrap'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">active </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Styles PageItem as active, and renders a <code>&lt;span&gt;</code> instead of an <code>&lt;a&gt;</code>.</p></div></td></tr><tr><td class="font-monospace">activeLabel </td><td class="font-monospace"><div>string</div></td><td><code>'(current)'</code></td><td><div><p>An accessible label indicating the active state..</p></div></td></tr><tr><td class="font-monospace">disabled </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Disables the PageItem</p></div></td></tr><tr><td class="font-monospace">href </td><td class="font-monospace"><div>string</div></td><td></td><td><div></div></td></tr><tr><td class="font-monospace">onClick </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback function for when this component is clicked</p></div></td></tr></tbody></table></div></div>`),f=()=>g.cloneNode(!0),u=r("<div><br><br></div>"),I=r('<div class="row gy-4"><div><h2>Pagination</h2><p class="lead">A set of presentational components for building pagination UI.</p></div><div></div></div>'),_=()=>{let h=2;const n=()=>t(v,{each:new Array(5),children:(s,i)=>t(e.Item,{get active(){return i()+1===h},get children(){return i()+1}})});return(()=>{const s=I.cloneNode(!0),i=s.firstChild,p=i.firstChild,c=i.nextSibling;return d(i,t(b,{name:"PaginationDocs"}),p),d(c,t(o,{get children(){return[t(o.Header,{children:"Examples"}),t(o.Body,{get children(){const a=u.cloneNode(!0),l=a.firstChild,m=l.nextSibling;return d(a,t(e,{children:n}),l),d(a,t(e,{size:"lg",children:n}),m),d(a,t(e,{size:"sm",children:n}),null),a}})]}}),null),d(c,t(o,{get children(){return[t(o.Header,{children:"More options"}),t(o.Body,{get children(){return t(e,{get children(){return[t(e.First,{}),t(e.Prev,{}),t(e.Item,{children:1}),t(e.Ellipsis,{}),t(e.Item,{children:10}),t(e.Item,{children:11}),t(e.Item,{active:!0,children:12}),t(e.Item,{children:13}),t(e.Item,{disabled:!0,children:14}),t(e.Ellipsis,{}),t(e.Item,{children:20}),t(e.Next,{}),t(e.Last,{})]}})}})]}}),null),d(s,t(f,{}),null),s})()};export{_ as PaginationDocs,_ as default};
