import{c as t,m as w,ag as z,y as G,x as J,$ as O,t as n,g as B,u as P,O as V,s as k,i as a,w as D,ah as q,b as A,d as H,a3 as M,p as j,v as F,H as X,D as Y,n as C}from"./vendor.b0d12bc4.js";import{C as d}from"./Card.b4a8d3c9.js";import{R as W,C as x,B as S}from"./Layout.eb1c4701.js";import{F as K}from"./Form.64847d35.js";import{u as Q}from"./utils.34348416.js";import{G as U}from"./GithubSource.ff774389.js";import"./FormControl.cd95431d.js";const Z={[G]:"showing",[J]:"showing show"},tt=h=>t(z,w(h,{transitionClasses:Z}));var et=tt;const ot=O({onClose(){}});var E=ot;const st=n("<div></div>"),dt={closeLabel:"Close",closeButton:!0},at=h=>{const[e,m]=B(w(dt,h),["bsPrefix","closeLabel","closeVariant","closeButton","className","children"]),u=P(e.bsPrefix,"toast-header"),b=V(E),g=r=>{b?.onClose?.(r)};return(()=>{const r=st.cloneNode(!0);return k(r,m,!1,!0),a(r,()=>e.children,null),a(r,(()=>{const f=D(()=>!!e.closeButton,!0);return()=>f()&&t(q,{get["aria-label"](){return e.closeLabel},get variant(){return e.closeVariant},onClick:g,"data-dismiss":"toast"})})(),null),A(()=>r.className=H(u,e.className)),r})()};var nt=at,rt=M("toast-body");const it=n('<div role="alert" aria-live="assertive" aria-atomic="true"></div>'),lt={transition:et,show:!0,animation:!0,delay:5e3,autohide:!1},ct=h=>{const[e,m]=B(w(lt,h),["bsPrefix","className","transition","show","animation","delay","autohide","onClose","bg"]),u=P(e.bsPrefix,"toast");let b=e.delay,g=e.onClose;j(()=>{b=e.delay,g=e.onClose});let r;const f=F(()=>!!(e.autohide&&e.show)),y=F(()=>()=>{f()&&g?.()});j(()=>{f()&&(window.clearTimeout(r),r=window.setTimeout(y(),b))}),X(()=>{window.clearTimeout(r)});const T={get onClose(){return e.onClose}},N=!!(e.transition&&e.animation),p=e.transition,s=()=>(()=>{const i=it.cloneNode(!0);return k(i,m,!1,!1),A(()=>i.className=H(u,e.className,e.bg&&`bg-${e.bg}`,!N&&(e.show?"show":"hide"))),i})();return t(E.Provider,{value:T,get children(){const i=D(()=>!!(N&&e.transition),!0);return()=>i()?t(p,{appear:!0,get in(){return e.show},unmountOnExit:!0,get children(){return t(s,{})}}):t(s,{})}})};var o=Object.assign(ct,{Body:rt,Header:nt});const ht={"top-start":"top-0 start-0","top-center":"top-0 start-50 translate-middle-x","top-end":"top-0 end-0","middle-start":"top-50 start-0 translate-middle-y","middle-center":"top-50 start-50 translate-middle","middle-end":"top-50 end-0 translate-middle-y","bottom-start":"bottom-0 start-0","bottom-center":"bottom-0 start-50 translate-middle-x","bottom-end":"bottom-0 end-0"},pt={as:"div"},ut=h=>{const[e,m]=B(w(pt,h),["as","bsPrefix","position","className"]),u=P(e.bsPrefix,"toast-container");return t(Y,w({get component(){return e.as}},m,{get className(){return H(u,e.position&&`position-absolute ${ht[e.position]}`,e.className)}}))};var _=ut;const mt=n(`<div class="mt-5"><h2>API</h2><h3>Toast</h3><code>import Toast from 'solid-bootstrap/Toast'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">animation </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>Apply a CSS fade transition to the toast</p></div></td></tr><tr><td class="font-monospace">autohide </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Auto hide the toast</p></div></td></tr><tr><td class="font-monospace">bg </td><td class="font-monospace"><div><span><code>'primary'</code><span> | </span><code>'secondary'</code><span> | </span><code>'success'</code><span> | </span><code>'danger'</code><span> | </span><code>'warning'</code><span> | </span><code>'info'</code><span> | </span><code>'dark'</code><span> | </span><code>'light'</code></span></div></td><td></td><td><div><p>Sets Toast background</p></div></td></tr><tr><td class="font-monospace">delay </td><td class="font-monospace"><div>number</div></td><td><code>5000</code></td><td><div><p>Delay hiding the toast (ms)</p></div></td></tr><tr><td class="font-monospace">onClose </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A Callback fired when the close button is clicked.</p></div></td></tr><tr><td class="font-monospace">show </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>When <code>true</code> The modal will show itself.</p></div></td></tr><tr><td class="font-monospace">transition </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;ToastFade&gt;</code></td><td><div><p>A <code>react-transition-group</code> Transition component used to animate the Toast on dismissal.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'toast'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ToastHeader</h3><code>import ToastHeader from 'solid-bootstrap/ToastHeader'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">closeButton </td><td class="font-monospace"><div>boolean</div></td><td><code>true</code></td><td><div><p>Specify whether the Component should contain a close button</p></div></td></tr><tr><td class="font-monospace">closeLabel </td><td class="font-monospace"><div>string</div></td><td><code>'Close'</code></td><td><div><p>Provides an accessible label for the close button. It is used for Assistive Technology when the label text is not readable.</p></div></td></tr><tr><td class="font-monospace">closeVariant </td><td class="font-monospace"><div><span><code>'white'</code></span></div></td><td></td><td><div><p>Sets the variant for close button.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ToastBody</h3><code>import ToastBody from 'solid-bootstrap/ToastBody'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'toast-body'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>ToastContainer</h3><code>import ToastContainer from 'solid-bootstrap/ToastContainer'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">position </td><td class="font-monospace"><div><span><code>'top-start'</code><span> | </span><code>'top-center'</code><span> | </span><code>'top-end'</code><span> | </span><code>'middle-start'</code><span> | </span><code>'middle-center'</code><span> | </span><code>'middle-end'</code><span> | </span><code>'bottom-start'</code><span> | </span><code>'bottom-center'</code><span> | </span><code>'bottom-end'</code></span></div></td><td></td><td><div><p>Where the toasts will be placed within the container.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'toast-container'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div></div>`),gt=()=>mt.cloneNode(!0),l=n('<img src="holder.js/20x20?text=%20" class="rounded me-2" alt="">'),c=n('<strong class="me-auto">Bootstrap</strong>'),v=n("<small>11 mins ago</small>"),bt=n("<strong>with</strong>"),ft=n("<strong>without</strong>"),I=n('<small class="text-muted">just now</small>'),L=n('<small class="text-muted">2 seconds ago</small>'),vt=n('<div class="mb-3"><label for="selectToastPlacement">Toast position</label></div>'),R=n('<div aria-live="polite" aria-atomic="true" class="bg-dark position-relative"></div>'),yt=n('<div class="row gy-4"><div><h2>Toasts</h2><p class="lead">Push notifications to your visitors with a toast, a lightweight and easily customizable alert message.</p></div><div></div></div>'),Tt=n("<option></option>"),Ht=()=>{const[h,e]=C(!0),[m,u]=C(!0),[b,g]=C(!1),[r,f]=C("top-start");return Q(),(()=>{const y=yt.cloneNode(!0),T=y.firstChild,N=T.firstChild,p=T.nextSibling;return a(T,t(U,{name:"ToastDocs"}),N),a(p,t(d,{get children(){return[t(d.Header,{children:"Examples"}),t(d.Body,{get children(){return t(o,{get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),v.cloneNode(!0)]}}),t(o.Body,{children:"Hello, world! This is a toast message."})]}})}})]}}),null),a(p,t(d,{get children(){return[t(d.Header,{children:"Dismissible"}),t(d.Body,{get children(){return t(W,{get children(){return[t(x,{md:6,className:"mb-2",get children(){return[t(S,{onClick:()=>e(s=>!s),className:"mb-2",get children(){return["Toggle Toast ",bt.cloneNode(!0)," Animation"]}}),t(o,{get show(){return h()},onClose:()=>e(!1),get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),v.cloneNode(!0)]}}),t(o.Body,{children:"Woohoo, you're reading this text in a Toast!"})]}})]}}),t(x,{md:6,className:"mb-2",get children(){return[t(S,{onClick:()=>u(s=>!s),className:"mb-2",get children(){return["Toggle Toast ",ft.cloneNode(!0)," Animation"]}}),t(o,{get show(){return m()},onClose:()=>u(!1),animation:!1,get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),v.cloneNode(!0)]}}),t(o.Body,{children:"Woohoo, you're reading this text in a Toast!"})]}})]}})]}})}})]}}),null),a(p,t(d,{get children(){return[t(d.Header,{children:"Stacking"}),t(d.Body,{get children(){return t(_,{get children(){return[t(o,{get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),I.cloneNode(!0)]}}),t(o.Body,{children:"See? Just like this."})]}}),t(o,{get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),L.cloneNode(!0)]}}),t(o.Body,{children:"Heads up, toasts will stack automatically"})]}})]}})}})]}}),null),a(p,t(d,{get children(){return[t(d.Header,{children:"Placement"}),t(d.Body,{get children(){return[(()=>{const s=vt.cloneNode(!0);return s.firstChild,a(s,t(K.Select,{id:"selectToastPlacement",className:"mt-2",onChange:i=>f(i.currentTarget.value),get children(){return["top-start","top-center","top-end","middle-start","middle-center","middle-end","bottom-start","bottom-center","bottom-end"].map(i=>(()=>{const $=Tt.cloneNode(!0);return $.value=i,a($,i),$})())}}),null),s})(),(()=>{const s=R.cloneNode(!0);return s.style.setProperty("min-height","240px"),a(s,t(_,{className:"p-3",get position(){return r()},get children(){return t(o,{get children(){return[t(o.Header,{closeButton:!1,get children(){return[l.cloneNode(!0),c.cloneNode(!0),v.cloneNode(!0)]}}),t(o.Body,{children:"Hello, world! This is a toast message."})]}})}})),s})()]}})]}}),null),a(p,t(d,{get children(){return[t(d.Header,{children:"Wrapping element to stack"}),t(d.Body,{get children(){const s=R.cloneNode(!0);return s.style.setProperty("min-height","240px"),a(s,t(_,{position:"top-end",className:"p-3",get children(){return[t(o,{get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),I.cloneNode(!0)]}}),t(o.Body,{children:"See? Just like this."})]}}),t(o,{get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),L.cloneNode(!0)]}}),t(o.Body,{children:"Heads up, toasts will stack automatically"})]}})]}})),s}})]}}),null),a(p,t(d,{get children(){return[t(d.Header,{children:"Autohide (3000 ms)"}),t(d.Body,{get children(){return t(W,{get children(){return[t(x,{xs:6,get children(){return t(o,{onClose:()=>g(!1),get show(){return b()},delay:3e3,autohide:!0,get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),v.cloneNode(!0)]}}),t(o.Body,{children:"Woohoo, you're reading this text in a Toast!"})]}})}}),t(x,{xs:6,get children(){return t(S,{onClick:()=>g(!0),children:"Show Toast"})}})]}})}})]}}),null),a(p,t(d,{get children(){return[t(d.Header,{children:"Contextual variations"}),t(d.Body,{get children(){return["Primary","Secondary","Success","Danger","Warning","Info","Light","Dark"].map((s,i)=>t(o,{className:"d-inline-block m-1",get bg(){return s.toLowerCase()},get children(){return[t(o.Header,{get children(){return[l.cloneNode(!0),c.cloneNode(!0),v.cloneNode(!0)]}}),t(o.Body,{className:s==="Dark"?"text-white":"",children:"Hello, world! This is a toast message."})]}}))}})]}}),null),a(y,t(gt,{}),null),y})()};export{Ht as ToastDocs,Ht as default};
