import{t as l,v as r,a as n,d as u,S as p,i as c,w as g}from"./vendor.e0c45427.js";import{c as i,a as m,b as w}from"./Dropdown.ca381bff.js";import"./store.b4ef7dcb.js";import"./ssr.7123efb6.js";import"./index.b1cdc0dd.js";const h=l('<ul role="menu"><li></li><li></li><li></li></ul>'),f=l('<button class="btn btn-primary dropdown-toggle"></button>'),b=l("<span></span>"),$=l('<div class="row justify-content-md-center"><div class="col-md-auto"></div></div>'),D=l('<div class="row gy-4"><div><h3>Dropdowns (core)</h3><p class="lead">Dropdown is a set of structural components for building accessible dropdown menus with close-on-click, keyboard navigation, and correct focus handling.</p><p>Dropdown is primarily built from three base components that you should compose to build your dropdowns:</p><ul><li><code>Dropdown</code>: wraps the menu and toggle, and handles keyboard navigation</li><li><code>Dropdown.Toggle</code>: generally a button that triggers the opening of the menu</li><li><code>Dropdown.Menu</code>: the overlaid menu, positioned to the toggle with <code>PopperJS</code></li></ul></div><div></div></div>'),_=()=>{const[e,t]=m({flip:!0,offset:[0,5]});return(()=>{const o=h.cloneNode(!0),s=o.firstChild,d=s.nextSibling,a=d.nextSibling;return c(o,e,!1,!0),r(s,n(i.Item,{as:"a",class:"dropdown-item",href:"#",children:"Item 1"})),r(d,n(i.Item,{as:"a",class:"dropdown-item",href:"#",children:"Item 2"})),r(a,n(i.Item,{as:"a",class:"dropdown-item",href:"#",children:"Item 3"})),g(()=>o.className=`dropdown-menu ${t.show?"show":""}`),o})()},v=e=>{const[t]=w();return(()=>{const o=f.cloneNode(!0);return c(o,t,!1,!0),r(o,()=>e.children),o})()},y=e=>n(i,{get show(){return e.show},get onToggle(){return e.onToggle},get children(){const t=b.cloneNode(!0);return r(t,n(v,{get children(){return e.title}}),null),r(t,n(p,{get when(){return e.show},get children(){return n(_,{})}}),null),t}}),S=()=>{const[e,t]=u(!1);return(()=>{const o=$.cloneNode(!0),s=o.firstChild;return r(s,n(y,{get show(){return e()},onToggle:d=>t(d),get title(){return`${e()?"Close":"Open"} Dropdown`}})),o})()},T=()=>(()=>{const e=D.cloneNode(!0),t=e.firstChild,o=t.nextSibling;return r(o,n(S,{})),e})();export{T as CoreDropdownDocs,T as default};
