import{t as p,h as m,m as B,u as b,M as C,s as w,i as o,w as H,d as $,e as P,O as N,a as f,c as e,_ as S,n as k,H as D}from"./vendor.69cd9a37.js";import{C as d}from"./Card.3edc0ce5.js";import{G as A}from"./GithubSource.4ffb0243.js";const I=p('<div role="progressbar"></div>'),G=p('<span class="visually-hidden"></span>'),M=p("<div></div>"),y=S(),x=1e3,j={min:0,max:100,animated:!1,visuallyHidden:!1,striped:!1};function E(l,t,n){const i=(l-t)/(n-t)*100;return Math.round(i*x)/x}function _(l){const[t,n]=m(l,["min","now","max","label","visuallyHidden","striped","animated","className","style","variant","bsPrefix"]),i=b(t.bsPrefix,"progress");return(()=>{const s=I.cloneNode(!0);return w(s,n,!1,!0),o(s,(()=>{const r=H(()=>!!t.visuallyHidden,!0);return()=>r()?(()=>{const c=G.cloneNode(!0);return o(c,()=>t.label),c})():t.label})()),$(r=>{const c=P(t.className,`${i}-bar`,{[`bg-${t.variant}`]:t.variant,[`${i}-bar-animated`]:t.animated,[`${i}-bar-striped`]:t.animated||t.striped}),v={width:`${E(t.now,t.min,t.max)}%`,...t.style},u=t.now,h=t.min,g=t.max;return c!==r._v$&&(s.className=r._v$=c),r._v$2=N(s,v,r._v$2),u!==r._v$3&&f(s,"aria-valuenow",r._v$3=u),h!==r._v$4&&f(s,"aria-valuemin",r._v$4=h),g!==r._v$5&&f(s,"aria-valuemax",r._v$5=g),r},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0,_v$5:void 0}),s})()}const O=l=>{const[t,n]=m(B(j,l),["children","className","bsPrefix"]),i=b(t.bsPrefix,"progress"),s=C(y);let r=n,c={};if(!s?.isStacked){const[v,u]=m(n,["min","now","max","label","visuallyHidden","striped","animated","variant"]);r=v,c=u}return s?.isStacked?_(r):e(y.Provider,{value:{isStacked:!0},get children(){const v=M.cloneNode(!0);return w(v,c,!1,!0),o(v,()=>t.children??_(r)),$(()=>v.className=P(t.className,i)),v}})};var a=O;const R=p(`<div class="mt-5"><h2>API</h2><h3>ProgressBar</h3><code>import ProgressBar from 'solid-bootstrap/ProgressBar'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">animated </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Animate's the stripes from right to left</p></div></td></tr><tr><td class="font-monospace">children </td><td class="font-monospace"><div>onlyProgressBar</div></td><td></td><td><div><p>Child elements (only allows elements of type &lt;progressbar>)</p></div></td></tr><tr><td class="font-monospace">isChild </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div></div></td></tr><tr><td class="font-monospace">label </td><td class="font-monospace"><div>node</div></td><td></td><td><div><p>Show label that represents visual percentage. EG. 60%</p></div></td></tr><tr><td class="font-monospace">max </td><td class="font-monospace"><div>number</div></td><td><code>100</code></td><td><div><p>Maximum value progress can reach</p></div></td></tr><tr><td class="font-monospace">min </td><td class="font-monospace"><div>number</div></td><td><code>0</code></td><td><div><p>Minimum value progress can begin from</p></div></td></tr><tr><td class="font-monospace">now </td><td class="font-monospace"><div>number</div></td><td></td><td><div><p>Current value of progress</p></div></td></tr><tr><td class="font-monospace">striped </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Uses a gradient to create a striped effect.</p></div></td></tr><tr><td class="font-monospace">variant </td><td class="font-monospace"><div><span><code>'success'</code><span> | </span><code>'danger'</code><span> | </span><code>'warning'</code><span> | </span><code>'info'</code></span></div></td><td></td><td><div><p>Sets the background class of the progress bar.</p></div></td></tr><tr><td class="font-monospace">visuallyHidden </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Hide's the label visually.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'progress-bar'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div></div>`),T=()=>R.cloneNode(!0),U=p('<div class="row gy-4"><div><h2>Progress bars </h2><p class="lead">Provide up-to-date feedback on the progress of a workflow or action with simple yet flexible progress bars.</p></div><div></div></div>'),q=()=>{const[l,t]=k(5);{const n=window.setInterval(()=>{t(l()<100?l()+5:0)},1e3);D(()=>window.clearInterval(n))}return(()=>{const n=U.cloneNode(!0),i=n.firstChild,s=i.firstChild,r=i.nextSibling;return o(i,e(A,{name:"ProgressBarDocs"}),s),o(r,e(d,{get children(){return[e(d.Header,{children:"Default"}),e(d.Body,{get children(){return e(a,{now:60})}})]}}),null),o(r,e(d,{get children(){return[e(d.Header,{children:"With label"}),e(d.Body,{get children(){return e(a,{now:60,label:`${60}%`})}})]}}),null),o(r,e(d,{get children(){return[e(d.Header,{children:"Screenreader only label"}),e(d.Body,{get children(){return e(a,{now:60,label:`${60}%`,visuallyHidden:!0})}})]}}),null),o(r,e(d,{get children(){return[e(d.Header,{children:"Contextual alternatives"}),e(d.Body,{get children(){return[e(a,{variant:"success",now:40}),e(a,{variant:"info",now:20}),e(a,{variant:"warning",now:60}),e(a,{variant:"danger",now:80})]}})]}}),null),o(r,e(d,{get children(){return[e(d.Header,{children:"Striped"}),e(d.Body,{get children(){return[e(a,{striped:!0,variant:"success",now:40}),e(a,{striped:!0,variant:"info",now:20}),e(a,{striped:!0,variant:"warning",now:60}),e(a,{striped:!0,variant:"danger",now:80})]}})]}}),null),o(r,e(d,{get children(){return[e(d.Header,{children:"Animated"}),e(d.Body,{get children(){return e(a,{animated:!0,get now(){return l()},get label(){return`${l()}%`}})}})]}}),null),o(r,e(d,{get children(){return[e(d.Header,{children:"Stacked"}),e(d.Body,{get children(){return e(a,{get children(){return[e(a,{striped:!0,variant:"success",now:35}),e(a,{variant:"warning",now:20}),e(a,{striped:!0,variant:"danger",now:10})]}})}})]}}),null),o(n,e(T,{}),null),n})()};export{q as ProgressBarDocs,q as default};
