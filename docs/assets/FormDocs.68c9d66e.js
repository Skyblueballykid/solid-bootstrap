import{t as n,n as W,i as o,c as e}from"./vendor.b0d12bc4.js";import{A as c}from"./Alert.e679adde.js";import{B as p,R as i,C as r}from"./Layout.eb1c4701.js";import{C as d}from"./Card.b4a8d3c9.js";import{F as t,a as b}from"./Form.64847d35.js";import{I as h}from"./InputGroup.62fb81de.js";import{G as Z}from"./GithubSource.ff774389.js";import"./FormControl.cd95431d.js";import"./InputGroupContext.dda47234.js";const J=n(`<div class="mt-5"><h2>API</h2><h3>Form</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">ref </td><td class="font-monospace"><div>ReactRef</div></td><td></td><td><div><p>The Form <code>ref</code> will be forwarded to the underlying element, which means, unless it's rendered <code>as</code> a composite component, it will be a DOM node, when resolved.</p></div></td></tr><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;form&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">validated </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Mark a form as having been validated. Setting it to <code>true</code> will toggle any validation styles on the forms elements.</p></div></td></tr></tbody></table></div><h3>Form.Floating</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">bsPrefix <sup class="text-danger">required</sup></td><td class="font-monospace"><div>string</div></td><td><code>'form-floating'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>Form.Group</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">ref </td><td class="font-monospace"><div>ReactRef</div></td><td></td><td><div><p>The FormGroup <code>ref</code> will be forwarded to the underlying element. Unless the FormGroup is rendered <code>as</code> a composite component, it will be a DOM node, when resolved.</p></div></td></tr><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">controlId </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Sets <code>id</code> on <code>&lt;FormControl&gt;</code> and <code>htmlFor</code> on <code>&lt;FormGroup.Label&gt;</code>.</p></div></td></tr></tbody></table></div><h3>Form.Text</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">ref </td><td class="font-monospace"><div>ReactRef</div></td><td></td><td><div><p>The FormText <code>ref</code> will be forwarded to the underlying element. Unless the FormText is rendered <code>as</code> a composite component, it will be a DOM node, when resolved.</p></div></td></tr><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;small&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">muted </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>A convenience prop for add the <code>text-muted</code> class, since it's so commonly used here.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'form-text'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>Form.Control</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">ref </td><td class="font-monospace"><div>ReactRef</div></td><td></td><td><div><p>The FormControl <code>ref</code> will be forwarded to the underlying input element, which means unless <code>as</code> is a composite component, it will be a DOM node, when resolved.</p></div></td></tr><tr><td class="font-monospace">as </td><td class="font-monospace"><div>'input' | 'textarea' | elementType</div></td><td><code>'input'</code></td><td><div><p>The underlying HTML element to use when rendering the FormControl.</p></div></td></tr><tr><td class="font-monospace">disabled </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Make the control disabled</p></div></td></tr><tr><td class="font-monospace">htmlSize </td><td class="font-monospace"><div>number</div></td><td></td><td><div><p>The size attribute of the underlying HTML element. Specifies the visible width in characters if <code>as</code> is <code>'input'</code>.</p></div></td></tr><tr><td class="font-monospace">id </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Uses <code>controlId</code> from <code>&lt;FormGroup&gt;</code> if not explicitly specified.</p></div></td></tr><tr><td class="font-monospace">isInvalid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Add "invalid" validation styles to the control and accompanying label</p></div></td></tr><tr><td class="font-monospace">isValid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Add "valid" validation styles to the control</p></div></td></tr><tr><td class="font-monospace">onChange </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback fired when the <code>value</code> prop changes</p></div></td></tr><tr><td class="font-monospace">plaintext </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Render the input as plain text. Generally used along side <code>readOnly</code>.</p></div></td></tr><tr><td class="font-monospace">readOnly </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Make the control readonly</p></div></td></tr><tr><td class="font-monospace">size </td><td class="font-monospace"><div><span><code>'sm'</code><span> | </span><code>'lg'</code></span></div></td><td></td><td><div><p>Input size variants</p></div></td></tr><tr><td class="font-monospace">type </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>The HTML input <code>type</code>, which is only relevant if <code>as</code> is <code>'input'</code> (the default).</p></div></td></tr><tr><td class="font-monospace">value </td><td class="font-monospace"><div>string | arrayOf | number</div></td><td></td><td><div class="mb-2"><small><em class="text-info"><span>controlled by: <code>onChange</code>, initial prop: <code>defaultValue</code></span></em></small></div><div><p>The <code>value</code> attribute of underlying input</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>form-control</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>FormControl.Feedback</h3><code>import FormControl from 'solid-bootstrap/FormControl'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td><code>&lt;div&gt;</code></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">tooltip </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Display feedback as a tooltip.</p></div></td></tr><tr><td class="font-monospace">type </td><td class="font-monospace"><div><span><code>'valid'</code><span> | </span><code>'invalid'</code></span></div></td><td><code>'valid'</code></td><td><div><p>Specify whether the feedback is for valid or invalid fields</p></div></td></tr></tbody></table></div><h3>Form.Check</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">ref </td><td class="font-monospace"><div>ReactRef</div></td><td></td><td><div><p>The FormCheck <code>ref</code> will be forwarded to the underlying input element, which means it will be a DOM node, when resolved.</p></div></td></tr><tr><td class="font-monospace">as </td><td class="font-monospace"><div>'input' | elementType</div></td><td><code>'input'</code></td><td><div><p>The underlying HTML element to use when rendering the FormCheck.</p></div></td></tr><tr><td class="font-monospace">children </td><td class="font-monospace"><div>node</div></td><td></td><td><div><p>Provide a function child to manually handle the layout of the FormCheck's inner components.</p><div><pre class="language-jsx"><code class="language-jsx">&lt;FormCheck>
  &lt;FormCheck.Input isInvalid type={radio} /> 
  &lt;FormCheck.Label>Allow us to contact you?&lt;/FormCheck.Label>
  &lt;Feedback type='invalid'>Yo this is required&lt;/Feedback>"
&lt;/FormCheck></code></pre></div></div></td></tr><tr><td class="font-monospace">disabled </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Disables the control.</p></div></td></tr><tr><td class="font-monospace">feedback </td><td class="font-monospace"><div>node</div></td><td></td><td><div><p>A message to display when the input is in a validation state</p></div></td></tr><tr><td class="font-monospace">feedbackTooltip </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Display feedback as a tooltip.</p></div></td></tr><tr><td class="font-monospace">id </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>A HTML id attribute, necessary for proper form accessibility. An id is recommended for allowing label clicks to toggle the check control.</p><p>This is <strong>required</strong> when <code>type="switch"</code> due to how they are rendered.</p></div></td></tr><tr><td class="font-monospace">inline </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Groups controls horizontally with other <code>FormCheck</code>s.</p></div></td></tr><tr><td class="font-monospace">isInvalid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Manually style the input as invalid</p></div></td></tr><tr><td class="font-monospace">isValid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Manually style the input as valid</p></div></td></tr><tr><td class="font-monospace">label </td><td class="font-monospace"><div>node</div></td><td></td><td><div><p>Label for the control.</p></div></td></tr><tr><td class="font-monospace">title </td><td class="font-monospace"><div>string</div></td><td><code>''</code></td><td><div><p><code>title</code> attribute for the underlying <code>FormCheckLabel</code>.</p></div></td></tr><tr><td class="font-monospace">type </td><td class="font-monospace"><div><span><code>'radio'</code><span> | </span><code>'checkbox'</code><span> | </span><code>'switch'</code></span></div></td><td><code>'checkbox'</code></td><td><div><p>The type of checkable.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'form-check'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr><tr><td class="font-monospace">bsSwitchPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'form-switch'</code></td><td><div><p>bsPrefix override for the base switch class.</p></div></td></tr></tbody></table></div><h3>FormCheck.Input</h3><code>import FormCheck from 'solid-bootstrap/FormCheck'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>'input' | elementType</div></td><td><code>'input'</code></td><td><div><p>The underlying HTML element to use when rendering the FormCheckInput.</p></div></td></tr><tr><td class="font-monospace">id </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>A HTML id attribute, necessary for proper form accessibility.</p></div></td></tr><tr><td class="font-monospace">isInvalid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Manually style the input as invalid</p></div></td></tr><tr><td class="font-monospace">isValid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Manually style the input as valid</p></div></td></tr><tr><td class="font-monospace">type </td><td class="font-monospace"><div><span><code>'radio'</code><span> | </span><code>'checkbox'</code></span></div></td><td><code>'checkbox'</code></td><td><div><p>The type of checkable.</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'form-check-input'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>FormCheck.Label</h3><code>import FormCheck from 'solid-bootstrap/FormCheck'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">htmlFor </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>The HTML for attribute for associating the label with an input</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>'form-check-label'</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>Form.Range</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">disabled </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Make the control disabled</p></div></td></tr><tr><td class="font-monospace">id </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Uses <code>controlId</code> from <code>&lt;FormGroup&gt;</code> if not explicitly specified.</p></div></td></tr><tr><td class="font-monospace">onChange </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback fired when the <code>value</code> prop changes</p></div></td></tr><tr><td class="font-monospace">value </td><td class="font-monospace"><div>string | arrayOf | number</div></td><td></td><td><div class="mb-2"><small><em class="text-info"><span>controlled by: <code>onChange</code>, initial prop: <code>defaultValue</code></span></em></small></div><div><p>The <code>value</code> attribute of underlying input</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>form-range</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>Form.Select</h3><code>import Form from 'solid-bootstrap/Form'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">disabled </td><td class="font-monospace"><div>boolean</div></td><td></td><td><div><p>Make the control disabled</p></div></td></tr><tr><td class="font-monospace">htmlSize </td><td class="font-monospace"><div>number</div></td><td></td><td><div><p>The size attribute of the underlying HTML element. Specifies the number of visible options.</p></div></td></tr><tr><td class="font-monospace">isInvalid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Add "invalid" validation styles to the control and accompanying label</p></div></td></tr><tr><td class="font-monospace">isValid </td><td class="font-monospace"><div>boolean</div></td><td><code>false</code></td><td><div><p>Add "valid" validation styles to the control</p></div></td></tr><tr><td class="font-monospace">onChange </td><td class="font-monospace"><div>function</div></td><td></td><td><div><p>A callback fired when the <code>value</code> prop changes</p></div></td></tr><tr><td class="font-monospace">size </td><td class="font-monospace"><div><span><code>'sm'</code><span> | </span><code>'lg'</code></span></div></td><td></td><td><div><p>Size variants</p></div></td></tr><tr><td class="font-monospace">value </td><td class="font-monospace"><div>string | arrayOf | number</div></td><td></td><td><div class="mb-2"><small><em class="text-info"><span>controlled by: <code>onChange</code>, initial prop: <code>defaultValue</code></span></em></small></div><div><p>The <code>value</code> attribute of underlying input</p></div></td></tr><tr><td class="font-monospace">bsPrefix </td><td class="font-monospace"><div>string</div></td><td><code>form-select</code></td><td><div><p>Change the underlying component CSS base class name and modifier class names prefix. <strong>This is an escape hatch</strong> for working with heavily customized bootstrap css.</p></div></td></tr></tbody></table></div><h3>FloatingLabel</h3><code>import FloatingLabel from 'solid-bootstrap/FloatingLabel'</code><div class="overflow-auto mt-4 mb-5 border border-light"><table class="bg-white mb-0 table table-striped table-bordered"><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td class="font-monospace">as </td><td class="font-monospace"><div>elementType</div></td><td></td><td><div><p>You can use a custom element type for this component.</p></div></td></tr><tr><td class="font-monospace">controlId </td><td class="font-monospace"><div>string</div></td><td></td><td><div><p>Sets <code>id</code> on <code>&lt;FormControl&gt;</code> and <code>htmlFor</code> on <code>&lt;label&gt;</code>.</p></div></td></tr><tr><td class="font-monospace">label <sup class="text-danger">required</sup></td><td class="font-monospace"><div>node</div></td><td></td><td><div><p>Form control label.</p></div></td></tr></tbody></table></div></div>`),K=()=>J.cloneNode(!0),f=n("<br>"),z=n("<option>Open this select menu</option>"),w=n('<option value="1">One</option>'),F=n('<option value="2">Two</option>'),k=n('<option value="3">Three</option>'),Q=n("<option>Large select</option>"),X=n("<option>Default select</option>"),ee=n("<option>Small select</option>"),te=n('<label for="floatingInputCustom">Email address</label>'),de=n('<label for="floatingPasswordCustom">Password</label>'),oe=n("<option>Choose...</option>"),re=n("<option>...</option>"),A=n("<fieldset></fieldset>"),le=n('<option value="0">Choose...</option>'),ne=n("<p>Help text should be explicitly associated with the form control it relates to using the aria-describedby attribute. This will ensure that assistive technologies\u2014such as screen readers\u2014will announce this help text when the user focuses or enters the control.</p>"),M=n("<option>Disabled select</option>"),ie=n('<fieldset disabled=""></fieldset>'),ae=n('<p>By default, browsers will treat all native form controls (<code>&lt;input></code>, <code>&lt;select></code> and <code>&lt;button></code> elements) inside a <code>&lt;fieldset disabled></code> as disabled, preventing both keyboard and mouse interactions on them. However, if your form also includes <code>&lt;a ... class="btn btn-*"></code> elements, these will only be given a style of pointer-events: none. As noted in the section about disabled state for buttons (and specifically in the sub-section for anchor elements), this CSS property is not yet standardized and isn\u2019t fully supported in Internet Explorer 10, and won\u2019t prevent keyboard users from being able to focus or activate these links. So to be safe, use custom JavaScript to disable such links.</p>'),se=n("<p>While Bootstrap will apply these styles in all browsers, Internet Explorer 11 and below don\u2019t fully support the disabled attribute on a <code>&lt;fieldset></code>. Use custom JavaScript to disable the fieldset in these browsers.</p>"),ce=n("<p>It's often beneficial to handle form validation via a library. In those cases, <code>isValid</code> and <code>isInvalid</code> props can be added to form controls to manually apply validation styles.</p>"),pe=n('<div class="row gy-4"><div><h2>Forms</h2><p class="lead">The <code>&lt;FormControl></code> component renders a form control with Bootstrap styling. The <code>&lt;FormGroup></code> component wraps a form control with proper spacing, along with support for a label, help text, and validation state. To ensure accessibility, set controlId on <code>&lt;FormGroup></code>, and use <code>&lt;FormLabel></code> for the label.</p></div><div></div><div><h4>Form controls</h4></div><div><h4>Sizing</h4></div><div><h4>Readonly</h4></div><div><h4>Readonly plain text</h4></div><div><h4>File input</h4></div><div><h4>Color</h4></div><div><h4>Checkboxes and Radios</h4></div><div><h4>Customizing FormCheck rendering</h4></div><div><h4>Range</h4></div><div><h4>Select</h4></div><div><h4>Sizing</h4></div><div><h4>Floating labels</h4></div><div><h4>Layout</h4></div><div><h4>Help text</h4><p>Block-level help text in forms can be created using <code>&lt;Form.Text></code>. Inline help text can be flexibly implemented using any inline HTML element and utility classes like.text-muted.</p><p>Help text below inputs can be styled with <code>&lt;Form.Text></code>. This component includes display: block and adds some top margin for easy spacing from the inputs above.</p></div><div><h4>Disabled forms</h4></div><div><h4>Validation</h4></div><div><h4>Custom form components</h4></div></div>'),P=n('<div class="mb-3"></div>'),xe=()=>{const[E,O]=W(!1),V=m=>{m.currentTarget.checkValidity()===!1&&(m.preventDefault(),m.stopPropagation()),O(!0)};return(()=>{const m=pe.cloneNode(!0),C=m.firstChild,U=C.firstChild,B=C.nextSibling,N=B.nextSibling;N.firstChild;const S=N.nextSibling;S.firstChild;const T=S.nextSibling;T.firstChild;const I=T.nextSibling;I.firstChild;const L=I.nextSibling;L.firstChild;const G=L.nextSibling;G.firstChild;const g=G.nextSibling;g.firstChild;const $=g.nextSibling;$.firstChild;const H=$.nextSibling;H.firstChild;const _=H.nextSibling;_.firstChild;const D=_.nextSibling;D.firstChild;const u=D.nextSibling;u.firstChild;const a=u.nextSibling;a.firstChild;const x=a.nextSibling,j=x.firstChild,q=j.nextSibling,Y=q.nextSibling,v=x.nextSibling;v.firstChild;const y=v.nextSibling;y.firstChild;const R=y.nextSibling;return R.firstChild,o(C,e(Z,{name:"FormDocs"}),U),o(B,e(d,{body:!0,get children(){return e(t,{get children(){return[e(t.Group,{className:"mb-3",controlId:"formBasicEmail",get children(){return[e(t.Label,{children:"Email address"}),e(t.Control,{type:"email",placeholder:"Enter email"}),e(t.Text,{className:"text-muted",children:"We'll never share your email with anyone else."})]}}),e(t.Group,{className:"mb-3",controlId:"formBasicPassword",get children(){return[e(t.Label,{children:"Password"}),e(t.Control,{type:"password",placeholder:"Password"})]}}),e(t.Group,{className:"mb-3",controlId:"formBasicCheckbox",get children(){return e(t.Check,{type:"checkbox",label:"Check me out"})}}),e(p,{variant:"primary",type:"submit",children:"Submit"})]}})}})),o(N,e(d,{body:!0,get children(){return e(t,{get children(){return[e(t.Group,{className:"mb-3",controlId:"exampleForm.ControlInput1",get children(){return[e(t.Label,{children:"Email address"}),e(t.Control,{type:"email",placeholder:"name@example.com"})]}}),e(t.Group,{className:"mb-3",controlId:"exampleForm.ControlTextarea1",get children(){return[e(t.Label,{children:"Example textarea"}),e(t.Control,{as:"textarea",rows:3})]}})]}})}}),null),o(S,e(d,{body:!0,get children(){return[e(t.Control,{size:"lg",type:"text",placeholder:"Large text"}),f.cloneNode(!0),e(t.Control,{type:"text",placeholder:"Normal text"}),f.cloneNode(!0),e(t.Control,{size:"sm",type:"text",placeholder:"Small text"})]}}),null),o(T,e(d,{body:!0,get children(){return e(t.Control,{type:"text",placeholder:"Readonly input here...",readOnly:!0})}}),null),o(I,e(d,{body:!0,get children(){return e(t,{get children(){return[e(t.Group,{as:i,className:"mb-3",controlId:"formPlaintextEmail",get children(){return[e(t.Label,{column:!0,sm:"2",children:"Email"}),e(r,{sm:"10",get children(){return e(t.Control,{plaintext:!0,readOnly:!0,value:"email@example.com"})}})]}}),e(t.Group,{as:i,className:"mb-3",controlId:"formPlaintextPassword",get children(){return[e(t.Label,{column:!0,sm:"2",children:"Password"}),e(r,{sm:"10",get children(){return e(t.Control,{type:"password",placeholder:"Password"})}})]}})]}})}}),null),o(L,e(d,{body:!0,get children(){return[e(t.Group,{controlId:"formFile",className:"mb-3",get children(){return[e(t.Label,{children:"Default file input example"}),e(t.Control,{type:"file"})]}}),e(t.Group,{controlId:"formFileMultiple",className:"mb-3",get children(){return[e(t.Label,{children:"Multiple files input example"}),e(t.Control,{type:"file",multiple:!0})]}}),e(t.Group,{controlId:"formFileDisabled",className:"mb-3",get children(){return[e(t.Label,{children:"Disabled file input example"}),e(t.Control,{type:"file",disabled:!0})]}}),e(t.Group,{controlId:"formFileSm",className:"mb-3",get children(){return[e(t.Label,{children:"Small file input example"}),e(t.Control,{type:"file",size:"sm"})]}}),e(t.Group,{controlId:"formFileLg",className:"mb-3",get children(){return[e(t.Label,{children:"Large file input example"}),e(t.Control,{type:"file",size:"lg"})]}})]}}),null),o(G,e(d,{body:!0,get children(){return[" ",e(t.Label,{htmlFor:"exampleColorInput",children:"Color picker"}),e(t.Control,{type:"color",id:"exampleColorInput",value:"#563d7c",title:"Choose your color"})]}}),null),o(g,e(d,{get children(){return[e(d.Header,{children:"Stacked"}),e(d.Body,{get children(){return e(t,{get children(){return["checkbox","radio"].map(l=>(()=>{const s=P.cloneNode(!0);return o(s,e(t.Check,{type:l,id:`default-${l}`,label:`default ${l}`}),null),o(s,e(t.Check,{disabled:!0,type:l,label:`disabled ${l}`,id:`disabled-default-${l}`}),null),s})())}})}})]}}),null),o(g,e(d,{get children(){return[e(d.Header,{children:"Inline"}),e(d.Body,{get children(){return e(t,{get children(){return["checkbox","radio"].map(l=>(()=>{const s=P.cloneNode(!0);return o(s,e(t.Check,{inline:!0,label:"1",name:"group1",type:l,id:`inline-${l}-1`}),null),o(s,e(t.Check,{inline:!0,label:"2",name:"group1",type:l,id:`inline-${l}-2`}),null),o(s,e(t.Check,{inline:!0,disabled:!0,label:"3 (disabled)",type:l,id:`inline-${l}-3`}),null),s})())}})}})]}}),null),o(g,e(d,{get children(){return[e(d.Header,{children:"Without labels"}),e(d.Body,{get children(){return[e(t.Check,{"aria-label":"option 1"}),e(t.Check,{type:"radio","aria-label":"radio 1"})]}})]}}),null),o($,e(d,{body:!0,get children(){return e(t,{get children(){return["checkbox","radio"].map(l=>(()=>{const s=P.cloneNode(!0);return o(s,e(t.Check,{type:l,id:`check-api-${l}`,get children(){return[e(t.Check.Input,{type:l,isValid:!0}),e(t.Check.Label,{children:`Custom api ${l}`}),e(t.Control.Feedback,{type:"valid",children:"You did it!"})]}})),s})())}})}}),null),o(H,e(d,{body:!0,get children(){return[e(t.Label,{children:"Range"}),e(t.Range,{})]}}),null),o(_,e(d,{body:!0,get children(){return e(t.Select,{"aria-label":"Default select example",get children(){return[z.cloneNode(!0),w.cloneNode(!0),F.cloneNode(!0),k.cloneNode(!0)]}})}}),null),o(D,e(d,{body:!0,get children(){return[e(t.Select,{size:"lg",get children(){return Q.cloneNode(!0)}}),f.cloneNode(!0),e(t.Select,{get children(){return X.cloneNode(!0)}}),f.cloneNode(!0),e(t.Select,{size:"sm",get children(){return ee.cloneNode(!0)}})," "]}}),null),o(u,e(d,{get children(){return[e(d.Header,{children:"Inputs"}),e(d.Body,{get children(){return[e(b,{controlId:"floatingInput",label:"Email address",className:"mb-3",get children(){return e(t.Control,{type:"email",placeholder:"name@example.com"})}}),e(b,{controlId:"floatingPassword",label:"Password",get children(){return e(t.Control,{type:"password",placeholder:"Password"})}})]}})]}}),null),o(u,e(d,{get children(){return[e(d.Header,{children:"Textareas"}),e(d.Body,{get children(){return[e(b,{controlId:"floatingTextarea",label:"Comments",className:"mb-3",get children(){return e(t.Control,{as:"textarea",placeholder:"Leave a comment here"})}}),e(b,{controlId:"floatingTextarea2",label:"Comments",get children(){return e(t.Control,{as:"textarea",placeholder:"Leave a comment here",style:{height:"100px"}})}})," "]}})]}}),null),o(u,e(d,{get children(){return[e(d.Header,{children:"Selects"}),e(d.Body,{get children(){return e(b,{controlId:"floatingSelect",label:"Works with selects",get children(){return e(t.Select,{"aria-label":"Floating label select example",get children(){return[z.cloneNode(!0),w.cloneNode(!0),F.cloneNode(!0),k.cloneNode(!0)]}})}})}})]}}),null),o(u,e(d,{get children(){return[e(d.Header,{children:"Layout"}),e(d.Body,{get children(){return e(i,{className:"g-2",get children(){return[e(r,{md:!0,get children(){return e(b,{controlId:"floatingInputGrid",label:"Email address",get children(){return e(t.Control,{type:"email",placeholder:"name@example.com"})}})}}),e(r,{md:!0,get children(){return e(b,{controlId:"floatingSelectGrid",label:"Works with selects",get children(){return e(t.Select,{"aria-label":"Floating label select example",get children(){return[z.cloneNode(!0),w.cloneNode(!0),F.cloneNode(!0),k.cloneNode(!0)]}})}})}})]}})}})]}}),null),o(u,e(d,{get children(){return[e(d.Header,{children:"Customizing rendering"}),e(d.Body,{get children(){return[e(t.Floating,{className:"mb-3",get children(){return[e(t.Control,{id:"floatingInputCustom",type:"email",placeholder:"name@example.com"}),te.cloneNode(!0)]}}),e(t.Floating,{get children(){return[e(t.Control,{id:"floatingPasswordCustom",type:"password",placeholder:"Password"}),de.cloneNode(!0)]}})]}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Form groups"}),e(d.Body,{get children(){return e(t,{get children(){return[e(t.Group,{className:"mb-3",controlId:"formGroupEmail",get children(){return[e(t.Label,{children:"Email address"}),e(t.Control,{type:"email",placeholder:"Enter email"})]}}),e(t.Group,{className:"mb-3",controlId:"formGroupPassword",get children(){return[e(t.Label,{children:"Password"}),e(t.Control,{type:"password",placeholder:"Password"})]}})]}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Form grid"}),e(d.Body,{get children(){return e(t,{get children(){return e(i,{get children(){return[e(r,{get children(){return e(t.Control,{placeholder:"First name"})}}),e(r,{get children(){return e(t.Control,{placeholder:"Last name"})}})]}})}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"More complex layout"}),e(d.Body,{get children(){return e(t,{get children(){return[e(i,{className:"mb-3",get children(){return[e(t.Group,{as:r,controlId:"formGridEmail",get children(){return[e(t.Label,{children:"Email"}),e(t.Control,{type:"email",placeholder:"Enter email"})]}}),e(t.Group,{as:r,controlId:"formGridPassword",get children(){return[e(t.Label,{children:"Password"}),e(t.Control,{type:"password",placeholder:"Password"})]}})]}}),e(t.Group,{className:"mb-3",controlId:"formGridAddress1",get children(){return[e(t.Label,{children:"Address"}),e(t.Control,{placeholder:"1234 Main St"})]}}),e(t.Group,{className:"mb-3",controlId:"formGridAddress2",get children(){return[e(t.Label,{children:"Address 2"}),e(t.Control,{placeholder:"Apartment, studio, or floor"})]}}),e(i,{className:"mb-3",get children(){return[e(t.Group,{as:r,controlId:"formGridCity",get children(){return[e(t.Label,{children:"City"}),e(t.Control,{})]}}),e(t.Group,{as:r,controlId:"formGridState",get children(){return[e(t.Label,{children:"State"}),e(t.Select,{value:"Choose...",get children(){return[oe.cloneNode(!0),re.cloneNode(!0)]}})]}}),e(t.Group,{as:r,controlId:"formGridZip",get children(){return[e(t.Label,{children:"Zip"}),e(t.Control,{})]}})]}}),e(t.Group,{className:"mb-3",id:"formGridCheckbox",get children(){return e(t.Check,{type:"checkbox",label:"Check me out"})}}),e(p,{variant:"primary",type:"submit",children:"Submit"})]}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Horizontal form"}),e(d.Body,{get children(){return e(t,{get children(){return[e(t.Group,{as:i,className:"mb-3",controlId:"formHorizontalEmail",get children(){return[e(t.Label,{column:!0,sm:2,children:"Email"}),e(r,{sm:10,get children(){return e(t.Control,{type:"email",placeholder:"Email"})}})]}}),e(t.Group,{as:i,className:"mb-3",controlId:"formHorizontalPassword",get children(){return[e(t.Label,{column:!0,sm:2,children:"Password"}),e(r,{sm:10,get children(){return e(t.Control,{type:"password",placeholder:"Password"})}})]}}),(()=>{const l=A.cloneNode(!0);return o(l,e(t.Group,{as:i,className:"mb-3",get children(){return[e(t.Label,{as:"legend",column:!0,sm:2,children:"Radios"}),e(r,{sm:10,get children(){return[e(t.Check,{type:"radio",label:"first radio",name:"formHorizontalRadios",id:"formHorizontalRadios1"}),e(t.Check,{type:"radio",label:"second radio",name:"formHorizontalRadios",id:"formHorizontalRadios2"}),e(t.Check,{type:"radio",label:"third radio",name:"formHorizontalRadios",id:"formHorizontalRadios3"})]}})]}})),l})(),e(t.Group,{as:i,className:"mb-3",controlId:"formHorizontalCheck",get children(){return e(r,{sm:{span:10,offset:2},get children(){return e(t.Check,{label:"Remember me"})}})}}),e(t.Group,{as:i,className:"mb-3",get children(){return e(r,{sm:{span:10,offset:2},get children(){return e(p,{type:"submit",children:"Sign in"})}})}})]}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Horizontal form label sizing"}),e(d.Body,{get children(){return[e(i,{get children(){return[e(t.Label,{column:"lg",lg:2,children:"Large Text"}),e(r,{get children(){return e(t.Control,{size:"lg",type:"text",placeholder:"Large text"})}})]}}),f.cloneNode(!0),e(i,{get children(){return[e(t.Label,{column:!0,lg:2,children:"Normal Text"}),e(r,{get children(){return e(t.Control,{type:"text",placeholder:"Normal text"})}})]}}),f.cloneNode(!0),e(i,{get children(){return[e(t.Label,{column:"sm",lg:2,children:"Small Text"}),e(r,{get children(){return e(t.Control,{size:"sm",type:"text",placeholder:"Small text"})}})]}})]}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Column sizing"}),e(d.Body,{get children(){return e(t,{get children(){return e(i,{get children(){return[e(r,{xs:7,get children(){return e(t.Control,{placeholder:"City"})}}),e(r,{get children(){return e(t.Control,{placeholder:"State"})}}),e(r,{get children(){return e(t.Control,{placeholder:"Zip"})}})]}})}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Auto-sizing"}),e(d.Body,{get children(){return e(t,{get children(){return e(i,{className:"align-items-center",get children(){return[e(r,{xs:"auto",get children(){return[e(t.Label,{htmlFor:"inlineFormInput",visuallyHidden:!0,children:"Name"}),e(t.Control,{className:"mb-2",id:"inlineFormInput",placeholder:"Jane Doe"})]}}),e(r,{xs:"auto",get children(){return[e(t.Label,{htmlFor:"inlineFormInputGroup",visuallyHidden:!0,children:"Username"}),e(h,{className:"mb-2",get children(){return[e(h.Text,{children:"@"}),e(t.Control,{id:"inlineFormInputGroup",placeholder:"Username"})]}})]}}),e(r,{xs:"auto",get children(){return e(t.Check,{type:"checkbox",id:"autoSizingCheck",className:"mb-2",label:"Remember me"})}}),e(r,{xs:"auto",get children(){return e(p,{type:"submit",className:"mb-2",children:"Submit"})}})]}})}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"Remixed with size-specific column classes"}),e(d.Body,{get children(){return e(t,{get children(){return e(i,{className:"align-items-center",get children(){return[e(r,{sm:3,className:"my-1",get children(){return[e(t.Label,{htmlFor:"inlineFormInputName",visuallyHidden:!0,children:"Name"}),e(t.Control,{id:"inlineFormInputName",placeholder:"Jane Doe"})]}}),e(r,{sm:3,className:"my-1",get children(){return[e(t.Label,{htmlFor:"inlineFormInputGroupUsername",visuallyHidden:!0,children:"Username"}),e(h,{get children(){return[e(h.Text,{children:"@"}),e(t.Control,{id:"inlineFormInputGroupUsername",placeholder:"Username"})]}})]}}),e(r,{xs:"auto",className:"my-1",get children(){return e(t.Check,{type:"checkbox",id:"autoSizingCheck2",label:"Remember me"})}}),e(r,{xs:"auto",className:"my-1",get children(){return e(p,{type:"submit",children:"Submit"})}})]}})}})}})]}}),null),o(a,e(d,{get children(){return[e(d.Header,{children:"And custom form controls are supported"}),e(d.Body,{get children(){return e(t,{get children(){return e(i,{className:"align-items-center",get children(){return[e(r,{xs:"auto",className:"my-1",get children(){return[e(t.Label,{className:"me-sm-2",htmlFor:"inlineFormCustomSelect",visuallyHidden:!0,children:"Preference"}),e(t.Select,{className:"me-sm-2",id:"inlineFormCustomSelect",get children(){return[le.cloneNode(!0),w.cloneNode(!0),F.cloneNode(!0),k.cloneNode(!0)]}})]}}),e(r,{xs:"auto",className:"my-1",get children(){return e(t.Check,{type:"checkbox",id:"customControlAutosizing",label:"Remember my preference"})}}),e(r,{xs:"auto",className:"my-1",get children(){return e(p,{type:"submit",children:"Submit"})}})]}})}})}})]}}),null),o(x,e(c,{variant:"warning",get children(){return[e(c.Heading,{children:"Associating help text with form controls"}),ne.cloneNode(!0)]}}),Y),o(x,e(d,{get children(){return e(d.Body,{get children(){return[e(t.Label,{htmlFor:"inputPassword5",children:"Password"}),e(t.Control,{type:"password",id:"inputPassword5","aria-describedby":"passwordHelpBlock"}),e(t.Text,{id:"passwordHelpBlock",muted:!0,children:"Your password must be 8-20 characters long, contain letters and numbers, and must not contain spaces, special characters, or emoji."})]}})}}),null),o(v,e(d,{get children(){return e(d.Body,{get children(){return[e(t.Group,{className:"mb-3",get children(){return[e(t.Label,{children:"Disabled input"}),e(t.Control,{placeholder:"Disabled input",disabled:!0})]}}),e(t.Group,{className:"mb-3",get children(){return[e(t.Label,{children:"Disabled select menu"}),e(t.Select,{disabled:!0,get children(){return M.cloneNode(!0)}})]}}),e(t.Group,{className:"mb-3",get children(){return e(t.Check,{type:"checkbox",label:"Can't check this",disabled:!0})}})]}})}}),null),o(v,e(d,{get children(){return[e(d.Header,{children:"Disabled fieldset"}),e(d.Body,{get children(){return e(t,{get children(){return[(()=>{const l=A.cloneNode(!0);return o(l,e(t.Group,{className:"mb-3",get children(){return[e(t.Label,{htmlFor:"disabledTextInput",children:"Disabled input"}),e(t.Control,{id:"disabledTextInput",placeholder:"Disabled input"})]}}),null),o(l,e(t.Group,{className:"mb-3",get children(){return[e(t.Label,{htmlFor:"disabledSelect",children:"Disabled select menu"}),e(t.Select,{id:"disabledSelect",get children(){return M.cloneNode(!0)}})]}}),null),l})(),(()=>{const l=ie.cloneNode(!0);return o(l,e(t.Group,{className:"mb-3",get children(){return e(t.Check,{type:"checkbox",id:"disabledFieldsetCheck",label:"Can't check this"})}}),null),o(l,e(p,{type:"submit",children:"Submit"}),null),l})()]}})}})]}}),null),o(v,e(c,{variant:"warning",get children(){return[e(c.Heading,{children:"Caveat with anchors"}),ae.cloneNode(!0)]}}),null),o(v,e(c,{variant:"danger",get children(){return[e(c.Heading,{children:"Cross-browser compatibility"}),se.cloneNode(!0)]}}),null),o(y,e(d,{get children(){return[e(d.Header,{children:"Inline"}),e(d.Body,{get children(){return e(t,{noValidate:!0,get validated(){return E()},onSubmit:V,get children(){return[e(i,{className:"mb-3",get children(){return[e(t.Group,{as:r,md:"4",controlId:"validationCustom01",get children(){return[e(t.Label,{children:"First name"}),e(t.Control,{required:!0,type:"text",placeholder:"First name",value:"Mark"}),e(t.Control.Feedback,{children:"Looks good!"})]}}),e(t.Group,{as:r,md:"4",controlId:"validationCustom02",get children(){return[e(t.Label,{children:"Last name"}),e(t.Control,{required:!0,type:"text",placeholder:"Last name",value:"Otto"}),e(t.Control.Feedback,{children:"Looks good!"})]}}),e(t.Group,{as:r,md:"4",controlId:"validationCustomUsername",get children(){return[e(t.Label,{children:"Username"}),e(h,{hasValidation:!0,get children(){return[e(h.Text,{id:"inputGroupPrepend",children:"@"}),e(t.Control,{type:"text",placeholder:"Username","aria-describedby":"inputGroupPrepend",required:!0}),e(t.Control.Feedback,{type:"invalid",children:"Please choose a username."})]}})]}})]}}),e(i,{className:"mb-3",get children(){return[e(t.Group,{as:r,md:"6",controlId:"validationCustom03",get children(){return[e(t.Label,{children:"City"}),e(t.Control,{type:"text",placeholder:"City",required:!0}),e(t.Control.Feedback,{type:"invalid",children:"Please provide a valid city."})]}}),e(t.Group,{as:r,md:"3",controlId:"validationCustom04",get children(){return[e(t.Label,{children:"State"}),e(t.Control,{type:"text",placeholder:"State",required:!0}),e(t.Control.Feedback,{type:"invalid",children:"Please provide a valid state."})]}}),e(t.Group,{as:r,md:"3",controlId:"validationCustom05",get children(){return[e(t.Label,{children:"Zip"}),e(t.Control,{type:"text",placeholder:"Zip",required:!0}),e(t.Control.Feedback,{type:"invalid",children:"Please provide a valid zip."})]}})]}}),e(t.Group,{className:"mb-3",get children(){return e(t.Check,{required:!0,label:"Agree to terms and conditions",feedback:"You must agree before submitting.",feedbackType:"invalid"})}}),e(p,{type:"submit",children:"Submit form"})]}})}})]}}),null),o(y,e(c,{variant:"info",get children(){return[e(c.Heading,{children:"Form libraries and server-rendered styles"}),ce.cloneNode(!0)]}}),null),o(y,e(d,{get children(){return[e(d.Header,{children:"Input group validation"}),e(d.Body,{get children(){return e(h,{hasValidation:!0,get children(){return[e(h.Text,{children:"@"}),e(t.Control,{type:"text",required:!0,isInvalid:!0}),e(t.Control.Feedback,{type:"invalid",children:"Please choose a username."})]}})}})]}}),null),o(R,e(d,{get children(){return[e(d.Header,{children:"Switches"}),e(d.Body,{get children(){return e(t,{get children(){return[e(t.Check,{type:"switch",id:"custom-switch",label:"Check this switch"}),e(t.Check,{disabled:!0,type:"switch",label:"disabled switch",id:"disabled-custom-switch"})]}})}})]}}),null),o(m,e(K,{}),null),m})()};export{xe as FormDocs,xe as default};
