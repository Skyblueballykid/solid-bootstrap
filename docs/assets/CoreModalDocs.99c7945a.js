import{t as n,v as r,a as i,h as u,d as v,i as h,w as f}from"./vendor.e0c45427.js";import{M as g}from"./index.19ea9f28.js";const $=n('<div class="modal-dialog"><div class="modal-content"><div class="modal-header"><h5 id="modal-label">Text in a modal</h5></div><div class="modal-body"><p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p></div><div class="modal-footer"></div></div></div>'),b=n('<div class="d-flex justify-content-center align-items-center"><button class="btn btn-primary">Open modal</button><span class="ps-2">Click to get the full Modal experience!</span></div>'),_=n("<p></p>"),y=n('<div class="modal-backdrop show"></div>'),M=n(`<div class="row gy-4"><div><h3>Modals (core)</h3><p class="lead">Love them or hate them, <code>&lt;Modal /></code> provides a solid foundation for creating dialogs, lightboxes, or whatever else. The Modal component renders its children node in front of a backdrop component.</p><p>The Modal offers a few helpful features over using just a <code>&lt;Portal /></code> component and some styles:</p><ul><li>Manages dialog stacking when one-at-a-time just isn't enough.</li><li>Creates a backdrop, for disabling interaction below the modal.</li><li>It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.</li><li>It disables scrolling of the page content while open.</li><li>Adds the appropriate ARIA roles are automatically.</li><li>Easily-pluggable animations via a <code>&lt;Transition /></code> component.</li></ul></div><div></div></div>`);let c=(e,l)=>e+Math.floor(Math.random()*(l-e));const w=()=>(()=>{const e=$.cloneNode(!0),l=e.firstChild,o=l.firstChild,t=o.nextSibling,p=t.nextSibling;return r(p,i(m,{})),f(a=>{const s=`${c(5,20)}%`,d=`${c(20,60)}%`;return s!==a._v$&&e.style.setProperty("margin-top",a._v$=s),d!==a._v$2&&e.style.setProperty("margin-left",a._v$2=d),a},{_v$:void 0,_v$2:void 0}),e})(),m=()=>{const[e,l]=v(!1);return[(()=>{const o=b.cloneNode(!0),t=o.firstChild;return t.$$click=()=>l(!0),o})(),_.cloneNode(!0),i(g,{class:"modal d-block pe-none",get show(){return e()},onHide:()=>l(!1),renderBackdrop:o=>(()=>{const t=y.cloneNode(!0);return h(t,o,!1,!1),t})(),"aria-labelledby":"modal-label",get children(){return i(w,{})}})]},C=()=>(()=>{const e=M.cloneNode(!0),l=e.firstChild,o=l.nextSibling;return r(o,i(m,{})),e})();u(["click"]);export{C as CoreModalDocs,C as default};
